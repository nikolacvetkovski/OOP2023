#include<iostream>
#include<string.h>
using namespace std;

//место за вашиот код
class Delo {
private:
    char imeDelo[50];
    int godinaNapisano;
    char zemjaPoteko[50];

public:
    Delo(char *imeDelo = "", int godinaNapisano = 0, char *zemjaPoteko = "") {
        strcpy(this->imeDelo, imeDelo);
        strcpy(this->zemjaPoteko, zemjaPoteko);
        this->godinaNapisano = godinaNapisano;
    }

    bool operator== (Delo &other) {
        return strcmp(imeDelo, other.imeDelo) == 0;
    }

    int getGodinaNapisano() {
        return godinaNapisano;
    }

    char *getZemjaPoteklo() {
        return zemjaPoteko;
    }

    char *getIme() {
        return imeDelo;
    }
};

class Pretstava {
private:
    Delo delo;
    int brProdadeniKarti;
    char dataNaPrikaz[15];

public:
    Pretstava(Delo delo = 0, int brProdadeniKarti = 0, char *dataNaPrikaz = "") {
        this->brProdadeniKarti = brProdadeniKarti;
        strcpy(this->dataNaPrikaz, dataNaPrikaz);
        this->delo = delo;
    }

    virtual int cena() {
        int n, m;
        if(delo.getGodinaNapisano() >= 1900 && delo.getGodinaNapisano() <= 2023) {
            m = 50;
        }
        else if(delo.getGodinaNapisano() >= 1800 && delo.getGodinaNapisano() < 1900) {
            m = 75;
        }
        else {
            m = 100;
        }

        if(strcmp(delo.getZemjaPoteklo(), "Italija") == 0) {
            n = 100;
        }
        else if(strcmp(delo.getZemjaPoteklo(), "Rusija") == 0) {
            n = 150;
        }
        else {
            n = 80;
        }

        return n + m;
    }

    int getBrKarti() {
        return brProdadeniKarti;
    }

    Delo getDelo() {
        return delo;
    }
};

class Opera : public Pretstava {
public:
    Opera(Delo delo = 0, int brProdadeniKarti = 0, char *dataNaPrikaz = "") : Pretstava(delo,brProdadeniKarti,dataNaPrikaz) {
    }
};

class Balet : public Pretstava {
private:
    static int DODATNA_CENA;

public:
    Balet(Delo delo = 0, int brProdadeniKarti = 0, char *dataNaPrikaz = "") : Pretstava(delo,brProdadeniKarti,dataNaPrikaz) {
    }

    int cena() {
        return Balet::DODATNA_CENA + Pretstava::cena();
    }
    
    static void setCenaBalet(int newCenaBalet) {
        Balet::DODATNA_CENA = newCenaBalet;
    }
};

int prihod(Pretstava **pretstavi, int n) {
    int sum = 0;
    for(int i=0; i<n; i++) {
        sum += pretstavi[i]->cena() * pretstavi[i]->getBrKarti();
    }
    return sum;
}

int brojPretstaviNaDelo(Pretstava **pretstavi, int n, Delo &d) {
    int counter = 0;
    for(int i=0; i<n; i++) {
        if(pretstavi[i]->getDelo() == d) {
            counter++;
        }
    }
    return counter;
}

int Balet::DODATNA_CENA = 150;

//citanje na delo
Delo readDelo(){
    char ime[50];
    int godina;
    char zemja[50];
    cin>>ime>>godina>>zemja;
    return Delo(ime,godina,zemja);
}
//citanje na pretstava
Pretstava* readPretstava(){
    int tip; //0 za Balet , 1 za Opera
    cin>>tip;
    Delo d=readDelo();
    int brojProdadeni;
    char data[15];
    cin>>brojProdadeni>>data;
    if (tip==0)  return new Balet(d,brojProdadeni,data);
    else return new Opera(d,brojProdadeni,data);
}
int main(){
    int test_case;
    cin>>test_case;
    
    switch(test_case){
    case 1:
    //Testiranje na klasite Opera i Balet
    {
        cout<<"======TEST CASE 1======="<<endl;
        Pretstava* p1=readPretstava();
        cout<<p1->getDelo().getIme()<<endl;
        Pretstava* p2=readPretstava();
        cout<<p2->getDelo().getIme()<<endl;
    }break;
        
    case 2:
    //Testiranje na  klasite Opera i Balet so cena
    {
        cout<<"======TEST CASE 2======="<<endl;
        Pretstava* p1=readPretstava();
        cout<<p1->cena()<<endl;
        Pretstava* p2=readPretstava();
        cout<<p2->cena()<<endl;
    }break;
    
    case 3:
    //Testiranje na operator ==
    {
        cout<<"======TEST CASE 3======="<<endl;
        Delo f1=readDelo();
        Delo f2=readDelo();
        Delo f3=readDelo();
        
        if (f1==f2) cout<<"Isti se"<<endl; else cout<<"Ne se isti"<<endl;
        if (f1==f3) cout<<"Isti se"<<endl; else cout<<"Ne se isti"<<endl;
    
    }break;
    
    case 4:
    //testiranje na funkcijata prihod
    {
        cout<<"======TEST CASE 4======="<<endl;
        int n;
        cin>>n;
        Pretstava **pole=new Pretstava*[n];
        for (int i=0;i<n;i++){
            pole[i]=readPretstava();
        
        }
        cout<<prihod(pole,n);
    }break;
    
    case 5:
    //testiranje na prihod so izmena na cena za 3d proekcii
    {
        cout<<"======TEST CASE 5======="<<endl;
        int cenaBalet;
        cin>>cenaBalet;
        Balet::setCenaBalet(cenaBalet);
        int n;
        cin>>n;
        Pretstava **pole=new Pretstava*[n];
        for (int i=0;i<n;i++){
            pole[i]=readPretstava();
        }
        cout<<prihod(pole,n);
        }break;
        
    case 6:
    //testiranje na brojPretstaviNaDelo
    {
        cout<<"======TEST CASE 6======="<<endl;
        int n;
        cin>>n;
        Pretstava **pole=new Pretstava*[n];
        for (int i=0;i<n;i++){
            pole[i]=readPretstava();
        }
        
        Delo f=readDelo();
        cout<<brojPretstaviNaDelo(pole,n,f);
    }break;
    
    };


return 0;
}
