#include <iostream>
#include <cstring>

using namespace std;

class Koncert {
private:
    char naziv[20];
    char lokacija[20];
    static float SEZONSKI_POPUST;
    float cenaBilet;

public:
    Koncert(char *naziv = "", char *lokacija = "", float cenaBilet = 0.0) {
        strcpy(this->naziv, naziv);
        strcpy(this->lokacija, lokacija);
        this->cenaBilet = cenaBilet;
    }

    static void setSezonskiPopust(float newSezonskiPopust) {
        Koncert::SEZONSKI_POPUST = newSezonskiPopust;
    }
    
    float getSezonskiPopust() {
        return Koncert::SEZONSKI_POPUST;
    }

    virtual float cena() {
        return cenaBilet * (1 - Koncert::SEZONSKI_POPUST);
    }

    char *getNaziv() {
        return naziv;
    }
};

class ElektronskiKoncert : public Koncert {
private:
    char *imeDJ;
    float vremeNastap;
    bool isDnevna;

public:
    ElektronskiKoncert(char *naziv = "", char *lokacija = "", float cenaBilet = 0.0, char *imeDJ = "", float vremeNastap = 0.0, bool isDnevna = true) : Koncert(naziv,lokacija,cenaBilet) {
        this->imeDJ = new char [30];
        strcpy(this->imeDJ, imeDJ);
        this->vremeNastap = vremeNastap;
        this->isDnevna = isDnevna;
    }

    ~ElektronskiKoncert() {
        delete[] imeDJ;
    }

    float cena() {
        float total = 0.0;
        if(vremeNastap > 7) {
            total += Koncert::cena() + 360;
        }
        else if(vremeNastap > 5) {
            total += Koncert::cena() + 150 ;
        }
        else {
            total += Koncert::cena();
        }

        if(isDnevna == true) {
            total -= 50;
        }
        else {
            total += 100;
        }

        return total;
    }
    
    /*float cena() {
        if(vremeNastap > 7) {
            if(isDnevna == true) {
                return Koncert::cena() + 310.0;
            }
            else {
                return Koncert::cena() + 460.0;
            }
        }
        else if(vremeNastap > 5) {
            if(isDnevna == true) {
                return Koncert::cena() + 100.0;
            }
            else {
                return Koncert::cena() + 250.0;
            }
        }
        else {
            if(isDnevna == true) {
                return Koncert::cena() - 50.0;
            }
            else {
                return Koncert::cena() + 100.0;
            }
        }
    }*/
};

void najskapKoncert(Koncert ** koncerti, int n) {
    Koncert *max_koncert = koncerti[0];
    int counter = 0;
    for(int i=1; i<n; i++) {
        if(koncerti[i]->cena() > max_koncert->cena()) {
            max_koncert = koncerti[i];
        }
    }

    for(int i=0; i<n; i++) {
        ElektronskiKoncert *casted = dynamic_cast<ElektronskiKoncert *>(koncerti[i]);

        if(casted != 0) {
            counter++;
        }
    }
    cout << "Najskap koncert: " << max_koncert->getNaziv() << ' ' << max_koncert->cena() << endl;
    cout << "Elektronski koncerti: " << counter << " od vkupno " << n << endl;
}

bool prebarajKoncert(Koncert ** koncerti, int n, char * naziv, bool elektronski) {
    if(elektronski == true) {
        for(int i=0; i<n; i++) {
            ElektronskiKoncert *casted = dynamic_cast <ElektronskiKoncert *>(koncerti[i]);

            if(casted != 0) {
            if(strcmp(koncerti[i]->getNaziv(), naziv) == 0) {
                    cout << casted->getNaziv() << ' ' << casted->cena() << endl;
                    return true;
                }
                else {
                    return false;
                }
            }
        }
    }
    else {
        for(int i=0; i<n; i++) {
            if(strcmp(koncerti[i]->getNaziv(), naziv) == 0) {
                cout << koncerti[i]->getNaziv() << ' ' << koncerti[i]->cena() << endl;
                return true;
             }
             else {
                 return false;
             }
        }
    }
}

float Koncert::SEZONSKI_POPUST = 0.2;

int main(){

    int tip,n,novaCena;
    char naziv[100], lokacija[100], imeDJ[40];
    bool dnevna;
    float cenaBilet, novPopust;
    float casovi;

        cin>>tip;
        if (tip==1){//Koncert
        	cin>>naziv>>lokacija>>cenaBilet;
        	Koncert k1(naziv,lokacija,cenaBilet);
        	cout<<"Kreiran e koncert so naziv: "<<k1.getNaziv()<<endl;
        }
        else if (tip==2){//cena - Koncert
            cin>>naziv>>lokacija>>cenaBilet;
        	Koncert k1(naziv,lokacija,cenaBilet);
        	cout<<"Osnovna cena na koncertot so naziv "<<k1.getNaziv()<< " e: " <<k1.cena()<<endl;
        }
        else if (tip==3){//ElektronskiKoncert
            cin>>naziv>>lokacija>>cenaBilet>>imeDJ>>casovi>>dnevna;
            ElektronskiKoncert s(naziv,lokacija,cenaBilet,imeDJ,casovi,dnevna);
            cout<<"Kreiran e elektronski koncert so naziv "<<s.getNaziv()<<" i sezonskiPopust "<<s.getSezonskiPopust()<<endl;
        }
        else if (tip==4){//cena - ElektronskiKoncert
             cin>>naziv>>lokacija>>cenaBilet>>imeDJ>>casovi>>dnevna;
             ElektronskiKoncert s(naziv,lokacija,cenaBilet,imeDJ,casovi,dnevna);
             cout<<"Cenata na elektronskiot koncert so naziv "<<s.getNaziv()<<" e: "<<s.cena()<<endl;
        }
        else if (tip==5) {//najskapKoncert

        }
        else if (tip==6) {//prebarajKoncert
            Koncert ** koncerti = new Koncert *[5];
            int n;
            koncerti[0] = new Koncert("Area","BorisTrajkovski",350);
            koncerti[1] = new ElektronskiKoncert("TomorrowLand","Belgium",8000,"Afrojack",7.5,false);
            koncerti[2] = new ElektronskiKoncert("SeaDance","Budva",9100,"Tiesto",5,true);
            koncerti[3] = new Koncert("Superhiks","PlatoUkim",100);
            koncerti[4] = new ElektronskiKoncert("CavoParadiso","Mykonos",8800,"Guetta",3,true);
            char naziv[100];
        	najskapKoncert(koncerti,5);
        }
        else if (tip==7){//prebaraj
        	  Koncert ** koncerti = new Koncert *[5];
            int n;
            koncerti[0] = new Koncert("Area","BorisTrajkovski",350);
            koncerti[1] = new ElektronskiKoncert("TomorrowLand","Belgium",8000,"Afrojack",7.5,false);
            koncerti[2] = new ElektronskiKoncert("SeaDance","Budva",9100,"Tiesto",5,true);
            koncerti[3] = new Koncert("Superhiks","PlatoUkim",100);
            koncerti[4] = new ElektronskiKoncert("CavoParadiso","Mykonos",8800,"Guetta",3,true);
            char naziv[100];
            bool elektronski;
        	cin>>elektronski;
        	if(prebarajKoncert(koncerti,5, "Area",elektronski))
                cout<<"Pronajden"<<endl;
            else cout<<"Ne e pronajden"<<endl;

            if(prebarajKoncert(koncerti,5, "Area",!elektronski))
                cout<<"Pronajden"<<endl;
            else cout<<"Ne e pronajden"<<endl;

        }
        else if (tip==8){//smeni cena
        	  Koncert ** koncerti = new Koncert *[5];
            int n;
            koncerti[0] = new Koncert("Area","BorisTrajkovski",350);
            koncerti[1] = new ElektronskiKoncert("TomorrowLand","Belgium",8000,"Afrojack",7.5,false);
            koncerti[2] = new ElektronskiKoncert("SeaDance","Budva",9100,"Tiesto",5,true);
            koncerti[3] = new Koncert("Superhiks","PlatoUkim",100);
            koncerti[2] -> setSezonskiPopust(0.9);
        	najskapKoncert(koncerti,4);
        }

    return 0;
}
