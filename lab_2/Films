#include <iostream>
#include <cstring>
using namespace std;

class Film {
private:
    char name[100];
    double rating;
    double revenue;

public:
    Film() {
        strcpy(name,"Sharks");
        rating = 5.4;
        revenue = 400.8;
    }

    Film(char * nname, double rrating, double rrevenue) {
        strcpy(name,nname);
        rating = rrating;
        revenue = rrevenue;
    }

    ~Film() {
    }

    void setName(char * nname) {
        strcpy(name,nname);
    }

    void setRating(double rrating) {
        rating = rrating;
    }

    void setRevenue(double rrevenue) {
        revenue = rrevenue;
    }

    char getName()
    {
        return *name;
    }

    double getRating()
    {
        return rating;
    }

    double getRevenue()
    {
        return revenue;
    }

    void display() {
        cout<<"Name of film: "<<name<<endl;
        cout<<"Rating: "<<rating<<endl;
        cout<<"Revenue: "<<revenue<<endl;
    }
};

/*void printMostPopularFilm(Film *films, int n){

    int max = 0, max_i = 0;
    for(int i=0; i<n; i++){

        if(films[i].getRevenue() > max){
            max=films[i].getRevenue();
            max_i = i;
        }
    }

    cout<<"Name of film: "<<films[max_i].getName()<<endl;
    cout<<"Rating:" << films[max_i].getRating()<<endl;
    cout<<"Revenue: "<<films[max_i].getRevenue()<<endl;
}*/

void printMostPopularFilm(Film * films, int n)
{
    int i,j;
    for(i=0; i<n-1; i++)
    {
        for(j=0; j<n-1-i; j++)
        {
            if(films[j].getRevenue() < films[j+1].getRevenue())
            {
                Film temp = films[j];
                films[j] = films[j+1];
                films[j+1] = temp;
            }
        }
    }

    films[0].display();
}

int main()
{
    int n;
    cin >> n;
    Film films[100];

    char name[100];
    double rating;
    double revenue;

    for (int i = 0; i < n-1; i++)  {
        cin >> name;
        cin >> rating;
        cin >> revenue;

        // testing constructor with arguments
        films[i] = Film(name, rating, revenue);

    }


    // testing set methods and display for last element
    cin >> name;
    cin >> rating;
    cin >> revenue;
    films[n-1].setName(name);
    films[n-1].setRating(rating);
    films[n-1].setRevenue(revenue);

    cout<<"-->Testing set methods and display()"<<endl;
    films[n-1].display();
    cout<<endl;

    cout<<"-->Testing printMostPopularFilm()"<<endl;
    printMostPopularFilm(films , n);
    return 0;
}
