#include <stdio.h>
#include <stdlib.h>


typedef struct SkiLift {
    char name[15];
    int users;
    int isFunctional;
}SkiLift;

void readSkiLift(SkiLift *s) {
    scanf("%s %d %d", s->name, &s->users, &s->isFunctional);
}
void printSkiLift(SkiLift s) {
    printf("%s %d %d\n", s.name, s.users, s.isFunctional);
}

typedef struct SkiCenter {
    char name[20];
    char country[20];
    SkiLift skilifts[20];
    int n;
}SkiCenter;

void readSkiCenter(SkiCenter *s) {
    scanf("%s %s %d", s->name, s->country, &s->n);
    int i;
    for(i=0; i<s->n; i++) {
        readSkiLift(&s->skilifts[i]);
    }
}
void printSkiCenter(SkiCenter s) {
    printf("%s %s\n", s.name, s.country);
    int i;
    for(i=0; i<s.n; i++) {
        printSkiLift(s.skilifts[i]);
    }
}

void najgolemKapacitet(SkiCenter *sc, int n) {
    int i,j, capacity = 0, pos = 0;
    int max_users = sc[0].skilifts[0].users, max_skilifts = sc[0].n;

    for(i=0; i<n; i++) {
        capacity = 0;
        for(j=0; j<sc[i].n; j++) {
            if(sc[i].skilifts[j].isFunctional == 1) {
                capacity += sc[i].skilifts[j].users;
            }
        }
        
        if(capacity > max_users) {
            max_users = capacity;
            pos = i;
            max_skilifts = sc[i].n;
        }
        
       else if(capacity == max_users) {
            if(sc[i].n > max_skilifts){
                max_users = capacity;
                pos = i;
                max_skilifts = sc[i].n;
            }
        }
    }

    printf("%s\n%s\n%d\n", sc[pos].name, sc[pos].country, max_users);
}

int main()
{
    SkiCenter skicenters[100];
    int i,n;
    scanf("%d", &n);

    for(i=0; i<n; i++) {
        readSkiCenter(&skicenters[i]);
    }

    najgolemKapacitet(skicenters,n);
    return 0;
}
