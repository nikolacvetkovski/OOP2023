#include <iostream>
#include <cstring>

using namespace std;

class Film {
private:
    char name[100];
    float rating;
    float revenue;

public:
    Film() {
        strcpy(name, "Titanic");
        rating = 8.7;
        revenue = 760.5;
    }

    Film(char *name , float rating, float revenue) {
        strcpy(this->name, name);
        this->rating = rating;
        this->revenue = revenue;
    }

    Film(const Film &f) {
        strcpy(name, f.name);
        rating = f.rating;
        revenue = f.revenue;
    }

    ~Film() {
    }

    char * getName() {
        return name;
    }

    float getRating() {
        return rating;
    }

    float getRevenue() {
        return revenue;
    }

    void setName(char *name) {
        strcpy(this->name, name);
    }

    void setRating(float rating) {
        this->rating = rating;
    }

    void setRevenue(float revenue) {
        this->revenue = revenue;
    }

    void display() {
        cout<<"Name of film: "<<name<<endl;
        cout<<"Rating: "<<rating<<endl;
        cout<<"Revenue: "<<revenue<<endl;
    }
};

void printMostPopularFilm(Film *films, int n) {
    int i,j;
    float max_revenue = films[0].getRevenue();
    int max_pos = 0;
    
    for(i=1; i<n; i++) {
        if(films[i].getRevenue() > max_revenue) {
            max_revenue = films[i].getRevenue();
            max_pos = i;
        }
    }
    
    films[max_pos].display();
}

// DO NOT CHANGE THE MAIN FUNCTION
int main() {
    int n;
    cin >> n;
    Film films[100];

    char name[100];
    double rating;
    double revenue;

    for (int i = 0; i < n-1; i++)  {
        cin>>name;
        cin >> rating;
        cin >> revenue;

        // testing constructor with arguments
        films[i] = Film(name, rating, revenue);

    }


    // testing set methods and display for last element
    cin>>name;
    cin >> rating;
    cin >> revenue;
    films[n-1].setName(name);
    films[n-1].setRating(rating);
    films[n-1].setRevenue(revenue);

    cout<<"-->Testing set methods and display()"<<endl;
    films[n-1].display();
    cout<<endl;

    cout<<"-->Testing printMostPopularFilm()"<<endl;
    printMostPopularFilm(films , n);
    return 0;
}
